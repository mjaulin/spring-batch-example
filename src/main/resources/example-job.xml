<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/batch
	http://www.springframework.org/schema/batch/spring-batch-2.2.xsd
	http://www.springframework.org/schema/beans
	http://www.springframework.org/schema/beans/spring-beans-3.2.xsd">

    <job id="example-job" xmlns="http://www.springframework.org/schema/batch">
        <step id="lineCountStep" next="splitFilesStep">
            <tasklet ref="lineCountTasklet">
                <listeners>
                    <listener ref="promotionListener"/>
                </listeners>
            </tasklet>
        </step>
        <step id="splitFilesStep" next="partitionStep">
            <tasklet>
                <chunk reader="splitItemReader" writer="splitItemWriter" commit-interval="10"/>
            </tasklet>
        </step>
        <step id="partitionStep">
            <partition step="slave" partitioner="partitioner">
                <handler grid-size="10" task-executor="taskExecutor"/>
            </partition>
        </step>
    </job>

    <step id="slave" xmlns="http://www.springframework.org/schema/batch">
        <tasklet>
            <chunk reader="reader" processor="processor" writer="writer" commit-interval="1" />
        </tasklet>
    </step>

    <bean id="promotionListener" class="org.springframework.batch.core.listener.ExecutionContextPromotionListener">
        <description>
            Permet de mettre le paramètre 'line.count' dans le contexte de job avec la même clé.
        </description>
        <property name="keys" value="line.count"/>
    </bean>

    <bean id="lineCountTasklet" class="fr.sii.atlantique.bdf.split.LineCountTasklet">
        <property name="resource" value="classpath:sample-data.csv" />
    </bean>

    <bean id="splitItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
        <property name="resource" value="classpath:sample-data.csv" />
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.PassThroughLineMapper" />
        </property>
        <property name="strict" value="true" />
    </bean>

    <bean id="splitItemWriter" class="fr.sii.atlantique.bdf.split.SplitItemWriter" scope="step">
        <property name="inputLineCount" value="#{jobExecutionContext['line.count']}" />
        <property name="nbFiles" value="10" />
    </bean>

    <bean id="partitioner" class="fr.sii.atlantique.bdf.partitioner.CustomPartitioner"/>

    <bean id="reader" class="org.springframework.batch.item.file.FlatFileItemReader" scope="step">
        <property name="resource" value="file:src/main/resources/input/partitioner/#{stepExecutionContext[file]}"/>
        <property name="lineMapper">
            <bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
                <property name="lineTokenizer">
                    <bean class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
                        <property name="names" value="firstName,lastName"/>
                    </bean>
                </property>
                <property name="fieldSetMapper">
                    <bean class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
                        <property name="targetType" value="fr.sii.atlantique.bdf.job.Person" />
                    </bean>
                </property>
            </bean>
        </property>
    </bean>

    <bean id="processor" class="fr.sii.atlantique.bdf.job.PersonItemProcessor"/>

    <bean id="writer" class="org.springframework.batch.item.database.JdbcBatchItemWriter">
        <property name="dataSource" ref="dataSource" />
        <property name="sql">
            <value>
                <![CDATA[
                INSERT INTO people (first_name, last_name) VALUES (:firstName, :lastName)
            ]]>
            </value>
        </property>
        <property name="itemSqlParameterSourceProvider">
            <bean class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
        </property>
    </bean>

    <bean id="taskExecutor" class="org.springframework.core.task.SimpleAsyncTaskExecutor" />

</beans>